// Code generated by MockGen. DO NOT EDIT.
// Source: E:\Code\VCS\vcs-sms\interfaces\elasticsearch_client.go

// Package interfaces is a generated GoMock package.
package interfaces

import (
	context "context"
	reflect "reflect"

	esapi "github.com/elastic/go-elasticsearch/esapi"
	gomock "github.com/golang/mock/gomock"
)

// MockIElasticsearchClient is a mock of IElasticsearchClient interface.
type MockIElasticsearchClient struct {
	ctrl     *gomock.Controller
	recorder *MockIElasticsearchClientMockRecorder
}

// MockIElasticsearchClientMockRecorder is the mock recorder for MockIElasticsearchClient.
type MockIElasticsearchClientMockRecorder struct {
	mock *MockIElasticsearchClient
}

// NewMockIElasticsearchClient creates a new mock instance.
func NewMockIElasticsearchClient(ctrl *gomock.Controller) *MockIElasticsearchClient {
	mock := &MockIElasticsearchClient{ctrl: ctrl}
	mock.recorder = &MockIElasticsearchClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIElasticsearchClient) EXPECT() *MockIElasticsearchClientMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockIElasticsearchClient) Do(ctx context.Context, req esapi.Request) (*esapi.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", ctx, req)
	ret0, _ := ret[0].(*esapi.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockIElasticsearchClientMockRecorder) Do(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockIElasticsearchClient)(nil).Do), ctx, req)
}
